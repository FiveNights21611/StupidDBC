package net.mcreator.stupiddragonblockc.configuration;

import net.minecraftforge.common.ForgeConfigSpec;

public class TheConfigConfiguration {
	public static final ForgeConfigSpec.Builder BUILDER = new ForgeConfigSpec.Builder();
	public static final ForgeConfigSpec SPEC;
	public static final ForgeConfigSpec.ConfigValue<Double> SAIYANTPGAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> HALFSAIYANTPGAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> HUMANTPGAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> SSMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SSGRADE2MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SSGRADE3MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> FPSSMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SS2MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SS3MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SSGODMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SSBLUEMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> BUFFEDMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> OOZARUMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SSBLUESHMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> GOLDENOOZARUMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SS4MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SS4LBMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SSROSEMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SSROSEG2MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> ULTIMATEMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> BEASTMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SSBLUE2MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SSROSE2MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SSBLUE3MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> SSROSE3MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> TPGMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKENMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN2MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN3MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN4MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN5MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN10MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN20MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN50MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN100MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> TPCOST;
	public static final ForgeConfigSpec.ConfigValue<Double> MAXSTATS;
	public static final ForgeConfigSpec.ConfigValue<Double> KIREGEN;
	public static final ForgeConfigSpec.ConfigValue<Double> LEGENDARYMULTIPLIERBONUS;
	public static final ForgeConfigSpec.ConfigValue<Double> CHANCEFORLEGENDARY;
	public static final ForgeConfigSpec.ConfigValue<Double> FREQUENCYOFLEGENDARY;
	public static final ForgeConfigSpec.ConfigValue<Double> POTENTIAL_LEVEL_MAX;
	public static final ForgeConfigSpec.ConfigValue<Double> POWERMAX;
	public static final ForgeConfigSpec.ConfigValue<Double> SSKIDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> SSG2KIDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> SSG3KIDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> FPSSKIDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> SS2KIDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> SS3KIDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> SSGODKIDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> SSBLUEKIDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> BUFFEDKIDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> SSBLUESHKIDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> GOLDENOOZARUKIDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> SS4KIDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> SS4LBKIDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> SSROSEKD;
	public static final ForgeConfigSpec.ConfigValue<Double> SSROSEG2KD;
	public static final ForgeConfigSpec.ConfigValue<Double> ULTIMATEKD;
	public static final ForgeConfigSpec.ConfigValue<Double> BEASTKD;
	public static final ForgeConfigSpec.ConfigValue<Double> SSBLUE2KD;
	public static final ForgeConfigSpec.ConfigValue<Double> SSROSE2KD;
	public static final ForgeConfigSpec.ConfigValue<Double> SSBLUE3KD;
	public static final ForgeConfigSpec.ConfigValue<Double> SSROSE3KD;
	public static final ForgeConfigSpec.ConfigValue<Double> TPGKD;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKENHD;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN2HD;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN3HD;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN4HD;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN5HD;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN10HD;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN20HD;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN50HD;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN100HD;
	public static final ForgeConfigSpec.ConfigValue<Double> SSG1PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> SSG2PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> SSG3PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> FPSSPRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> SS2PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> SS3PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> SSGODPRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> SSBLUEPRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> SSBEPRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> SS4PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> SS4LBPRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> ULTIMATEPRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> BEASTPRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> SSBLUE2PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> SSBLUE3PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> TPGPRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKENPRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN2PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN3PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN4PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN5PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN10PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN20PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN50PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> KAIOKEN100PRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> FLYCOST;
	public static final ForgeConfigSpec.ConfigValue<Double> POTENTIALCOST;
	public static final ForgeConfigSpec.ConfigValue<Double> UIOMENPRICE;
	public static final ForgeConfigSpec.ConfigValue<Double> UIOMENKD;
	public static final ForgeConfigSpec.ConfigValue<Double> UIOMENMULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> UIOMENDODGE;
	public static final ForgeConfigSpec.ConfigValue<Double> UIOMENCOUNTER;
	public static final ForgeConfigSpec.ConfigValue<Double> UIOMENCOUNTERPERCENTAGE;
	public static final ForgeConfigSpec.ConfigValue<Double> UIOMENHEATDRAIN;
	public static final ForgeConfigSpec.ConfigValue<Double> UIOMENCHARGEHEAT;
	static {
		BUILDER.push("Racial TP Gain");
		SAIYANTPGAIN = BUILDER.define("Saiyan TP Gain", (double) 5);
		HALFSAIYANTPGAIN = BUILDER.define("Half-Saiyan TP Gain", (double) 7);
		HUMANTPGAIN = BUILDER.define("Human TP Gain", (double) 1);
		BUILDER.pop();
		BUILDER.push("Transformation Multipliers");
		SSMULTIPLIER = BUILDER.define("SS Multiplier", (double) 1.5);
		SSGRADE2MULTIPLIER = BUILDER.define("SS Grade 2 Multiplier", (double) 1.675);
		SSGRADE3MULTIPLIER = BUILDER.define("SS Grade 3 Multiplier", (double) 1.75);
		FPSSMULTIPLIER = BUILDER.define("Full Power SS Multiplier", (double) 1.6);
		SS2MULTIPLIER = BUILDER.define("SS2 Mutliplier", (double) 2);
		SS3MULTIPLIER = BUILDER.define("SS3 Mutliplier", (double) 4);
		SSGODMULTIPLIER = BUILDER.define("SSGod Multiplier", (double) 10);
		SSBLUEMULTIPLIER = BUILDER.define("SSBlue Multiplier", (double) 15);
		BUFFEDMULTIPLIER = BUILDER.define("Buffed Multiplier", (double) 1.5);
		OOZARUMULTIPLIER = BUILDER.define("Oozaru Multiplier", (double) 1.1);
		SSBLUESHMULTIPLIER = BUILDER.define("SS Blue Evolved Multiplier", (double) 16.75);
		GOLDENOOZARUMULTIPLIER = BUILDER.define("Golden Oozaru Multiplier", (double) 5);
		SS4MULTIPLIER = BUILDER.define("Super Saiyan 4 Multiplier", (double) 15);
		SS4LBMULTIPLIER = BUILDER.define("Super Saiyan 4 - Limit Breaker Multiplier", (double) 16.75);
		SSROSEMULTIPLIER = BUILDER.define("SS Rose Multiplier", (double) 16);
		SSROSEG2MULTIPLIER = BUILDER.define("SS Rose Grade 2 Multiplier", (double) 17.75);
		ULTIMATEMULTIPLIER = BUILDER.define("Ultimate Multiplier", (double) 4);
		BEASTMULTIPLIER = BUILDER.define("Beast Multiplier", (double) 60);
		SSBLUE2MULTIPLIER = BUILDER.define("SS Blue 2", (double) 20);
		SSROSE2MULTIPLIER = BUILDER.define("SS Rose 2 Multiplier", (double) 20);
		SSBLUE3MULTIPLIER = BUILDER.define("SS Blue 3 Multiplier", (double) 40);
		SSROSE3MULTIPLIER = BUILDER.define("SS Rose 3 Multiplier", (double) 40);
		TPGMULTIPLIER = BUILDER.define("The Primal God Multiplier", (double) 100);
		BUILDER.pop();
		BUILDER.push("Kaioken Multipliers");
		KAIOKENMULTIPLIER = BUILDER.define("Kaioken Multiplier", (double) 1.1);
		KAIOKEN2MULTIPLIER = BUILDER.define("Kaioken x2 Multiplier", (double) 1.15);
		KAIOKEN3MULTIPLIER = BUILDER.define("Kaioken x3 Multiplier", (double) 1.2);
		KAIOKEN4MULTIPLIER = BUILDER.define("Kaioken x4 Multiplier", (double) 1.25);
		KAIOKEN5MULTIPLIER = BUILDER.define("Kaioken x5 Multiplier", (double) 1.3);
		KAIOKEN10MULTIPLIER = BUILDER.define("Kaioken x10 Multiplier", (double) 1.375);
		KAIOKEN20MULTIPLIER = BUILDER.define("Kaioken x20 Multiplier", (double) 1.425);
		KAIOKEN50MULTIPLIER = BUILDER.define("Kaioken x50 Multiplier", (double) 1.5);
		KAIOKEN100MULTIPLIER = BUILDER.define("Kaioken x100 Multiplier", (double) 2);
		BUILDER.pop();
		BUILDER.push("Common");
		TPCOST = BUILDER.define("TP Cost per Stat", (double) 16);
		MAXSTATS = BUILDER.define("Max Stats", (double) 10000);
		KIREGEN = BUILDER.define("Natural Ki Regen", (double) 10);
		LEGENDARYMULTIPLIERBONUS = BUILDER.define("Legendary Multiplier Bonus", (double) 0.2);
		CHANCEFORLEGENDARY = BUILDER.define("In percentage, the amount", (double) 2);
		FREQUENCYOFLEGENDARY = BUILDER.comment("How often it tries to give legendary to the player").define("In minutes", (double) 20);
		POTENTIAL_LEVEL_MAX = BUILDER.define("Numbers of Levels Achievable with Potential Unlock", (double) 10);
		POWERMAX = BUILDER.define("Max Power Level Accesible", (double) 50);
		BUILDER.pop();
		BUILDER.push("Ki Drain");
		SSKIDRAIN = BUILDER.define("Super Saiyan Ki Drain", (double) 5);
		SSG2KIDRAIN = BUILDER.define("SS Grade 2 Ki Drain", (double) 7);
		SSG3KIDRAIN = BUILDER.define("SS Grade 3 Ki Drain", (double) 8);
		FPSSKIDRAIN = BUILDER.define("Full Power SS Ki Drain", (double) 1);
		SS2KIDRAIN = BUILDER.define("SS2 Ki Drain", (double) 10);
		SS3KIDRAIN = BUILDER.define("SS3 Ki Drain", (double) 20);
		SSGODKIDRAIN = BUILDER.define("SS God Ki Drain", (double) 50);
		SSBLUEKIDRAIN = BUILDER.define("SS Blue Ki Drain", (double) 55);
		BUFFEDKIDRAIN = BUILDER.define("Buffed Ki Drain", (double) 5);
		SSBLUESHKIDRAIN = BUILDER.define("SS Blue Evolved Ki Drain", (double) 57);
		GOLDENOOZARUKIDRAIN = BUILDER.define("Golden Oozaru Ki Drain", (double) 25);
		SS4KIDRAIN = BUILDER.define("Super Saiyan 4 Ki Drain", (double) 55);
		SS4LBKIDRAIN = BUILDER.define("Super Saiyan 4 - Limit Breaker", (double) 57);
		SSROSEKD = BUILDER.define("SS Rose Ki Drain", (double) 55);
		SSROSEG2KD = BUILDER.define("SS Rose Grade 2 Ki Drain", (double) 57);
		ULTIMATEKD = BUILDER.define("Ultimate Ki Drain", (double) 5);
		BEASTKD = BUILDER.define("Beast Ki Drain", (double) 30);
		SSBLUE2KD = BUILDER.define("SS Blue 2 Ki Drain", (double) 60);
		SSROSE2KD = BUILDER.define("SS Rose 2 Ki Drain", (double) 60);
		SSBLUE3KD = BUILDER.define("SS Blue 3 KD", (double) 75);
		SSROSE3KD = BUILDER.define("SS Rose 3 Ki Drain", (double) 75);
		TPGKD = BUILDER.define("The Primal God Ki Drain", (double) 250);
		BUILDER.pop();
		BUILDER.push("Kaioken Health Drain");
		KAIOKENHD = BUILDER.define("Kaioken Health Drain", (double) 1);
		KAIOKEN2HD = BUILDER.define("Kaioken x2 Health Drain", (double) 2);
		KAIOKEN3HD = BUILDER.define("Kaioken x3 Health Drain", (double) 3);
		KAIOKEN4HD = BUILDER.define("Kaioken x4 Health Drain", (double) 4);
		KAIOKEN5HD = BUILDER.define("Kaioken x5 Health Drain", (double) 5);
		KAIOKEN10HD = BUILDER.define("Kaioken x10 Health Drain", (double) 10);
		KAIOKEN20HD = BUILDER.define("Kaioken x20 Health Drain", (double) 20);
		KAIOKEN50HD = BUILDER.define("Kaioken x50 Health Drain", (double) 50);
		KAIOKEN100HD = BUILDER.define("Kaioken x100 Health Drain", (double) 100);
		BUILDER.pop();
		BUILDER.push("Transformation Prices");
		SSG1PRICE = BUILDER.define("Super Saiyan TP Cost", (double) 5000);
		SSG2PRICE = BUILDER.define("SS Grade 2 TP Cost", (double) 6750);
		SSG3PRICE = BUILDER.define("SS Grade 3 TP Cost", (double) 7500);
		FPSSPRICE = BUILDER.define("FPSS TP Cost", (double) 10000);
		SS2PRICE = BUILDER.define("SS2 TP Cost", (double) 25000);
		SS3PRICE = BUILDER.define("SS3 TP Cost", (double) 50000);
		SSGODPRICE = BUILDER.define("SSGod Price", (double) 300000);
		SSBLUEPRICE = BUILDER.define("SSBlue Price", (double) 500000);
		SSBEPRICE = BUILDER.define("SSBlue Evolved Price", (double) 675000);
		SS4PRICE = BUILDER.define("SS4 Price", (double) 500000);
		SS4LBPRICE = BUILDER.define("SS4 - LB Price", (double) 675000);
		ULTIMATEPRICE = BUILDER.define("Ultimate Form's Price", (double) 50000);
		BEASTPRICE = BUILDER.define("Beast Price", (double) 600000);
		SSBLUE2PRICE = BUILDER.define("SS Blue 2 Price", (double) 1000000);
		SSBLUE3PRICE = BUILDER.define("SS Blue 3 Price", (double) 2500000);
		TPGPRICE = BUILDER.define("The Primal God Price", (double) 9999000);
		BUILDER.pop();
		BUILDER.push("Kaioken TP Costs");
		KAIOKENPRICE = BUILDER.define("Kaioken TP Cost", (double) 500);
		KAIOKEN2PRICE = BUILDER.define("Kaioken x2 TP Cost", (double) 1000);
		KAIOKEN3PRICE = BUILDER.define("Kaioken x3 TP Cost", (double) 1500);
		KAIOKEN4PRICE = BUILDER.define("Kaioken x4 TP Cost", (double) 2000);
		KAIOKEN5PRICE = BUILDER.define("Kaioken x5 TP Cost", (double) 2500);
		KAIOKEN10PRICE = BUILDER.define("Kaioken x10 TP Cost", (double) 3000);
		KAIOKEN20PRICE = BUILDER.define("Kaioken x20 TP Cost", (double) 4000);
		KAIOKEN50PRICE = BUILDER.define("Kaioken x50 TP Cost", (double) 5000);
		KAIOKEN100PRICE = BUILDER.define("Kaioken x100 TP Cost", (double) 10000);
		BUILDER.pop();
		BUILDER.push("Skill TP Costs");
		FLYCOST = BUILDER.define("Cost of Fly", (double) 50);
		POTENTIALCOST = BUILDER.define("Cost of Potential Unlock", (double) 50);
		BUILDER.pop();
		BUILDER.push("Ultra Instinct Stats");
		UIOMENPRICE = BUILDER.define("Ultra Instinct Omen Price", (double) 750000);
		UIOMENKD = BUILDER.define("Ultra Instinct Omen Ki Drain", (double) 75);
		UIOMENMULTIPLIER = BUILDER.define("Ultra Instinct Omen Multiplier", (double) 80);
		UIOMENDODGE = BUILDER.define("In Percentage, the change to Dodge in Ultra Instinct Omen", (double) 25);
		UIOMENCOUNTER = BUILDER.define("In Percentage, the chance to counter in Ultra Instinct Omen", (double) 10);
		UIOMENCOUNTERPERCENTAGE = BUILDER.define("In Percentage, how much of your power used to counter in UI Omen", (double) 60);
		UIOMENHEATDRAIN = BUILDER.define("Ultra Instinct Omen Heat Drain", (double) 5);
		UIOMENCHARGEHEAT = BUILDER.define("How much your Heat increases whilst using Ultra Instinct Omen", (double) 25);
		BUILDER.pop();

		SPEC = BUILDER.build();
	}

}
